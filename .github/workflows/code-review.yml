name: Code Review - Morpheus Validator

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop
      - 'feat/**'
      - 'fix/**'

jobs:
  code-review:
    name: Automated Code Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Type Check
        run: npm run type-check

      - name: Run Linting
        run: npm run lint

      - name: Run Code Validation
        run: npm run review:validate

      - name: Run Unit Tests
        run: npm run test:unit -- --run

      - name: Run Integration Tests
        run: npm run test:integration
        continue-on-error: true

      - name: Run Test Coverage
        run: npm run test:coverage

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

      - name: Comment PR with Review Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reviewPath = '.github/PULL_REQUEST_REVIEW.md';

            let body = '## ü§ñ Automated Code Review\n\n';
            body += '### ‚úÖ All Checks Passed\n\n';
            body += '- ‚úÖ Type Check\n';
            body += '- ‚úÖ Linting\n';
            body += '- ‚úÖ Code Validation\n';
            body += '- ‚úÖ Unit Tests\n';
            body += '- ‚úÖ Test Coverage (‚â•75%)\n\n';
            body += '---\n';
            body += '*Automated by Morpheus Validator*';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  security-review:
    name: Security Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Security Audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for Secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
        continue-on-error: true

  architecture-review:
    name: Architecture Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check Architecture Compliance
        run: |
          echo "üèóÔ∏è  Checking architecture compliance..."

          # Check that agent files extend BaseAgent
          echo "Checking agent implementations..."
          find agents/implementations -name "*.ts" ! -name "index.ts" | while read file; do
            if grep -q "class" "$file" && ! grep -q "extends BaseAgent" "$file"; then
              echo "‚ùå $file does not extend BaseAgent"
              exit 1
            fi
          done

          # Check API routes have error handling
          echo "Checking API routes..."
          find app/api -name "route.ts" | while read file; do
            if ! grep -q "try" "$file" || ! grep -q "catch" "$file"; then
              echo "‚ö†Ô∏è  $file missing try/catch error handling"
            fi
          done

          echo "‚úÖ Architecture compliance check complete"

  performance-review:
    name: Performance Review
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Analyze Bundle Size
        run: |
          echo "üì¶ Bundle size analysis..."
          du -sh .next/

          # Check for large dependencies
          npx depcheck
        continue-on-error: true
