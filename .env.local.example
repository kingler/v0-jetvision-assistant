# ============================================================================
# JetVision AI Assistant - Environment Variables Template
# ============================================================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control
# ============================================================================

# ----------------------------------------------------------------------------
# Application Configuration
# ----------------------------------------------------------------------------
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000

# ----------------------------------------------------------------------------
# OpenAI Configuration (REQUIRED for AI Agents)
# ----------------------------------------------------------------------------
# Get your API key from: https://platform.openai.com/api-keys
# Organization ID is optional but recommended for team projects
OPENAI_API_KEY=sk-proj-...
OPENAI_ORGANIZATION_ID=org-...

# ----------------------------------------------------------------------------
# Redis Configuration (REQUIRED for Task Queue - BullMQ)
# ----------------------------------------------------------------------------
# For local development with Docker: redis://localhost:6379
# For Upstash (production): rediss://...
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_URL=redis://localhost:6379

# Redis Connection Options (Advanced)
# REDIS_MAX_RETRIES_PER_REQUEST=3
# REDIS_ENABLE_READY_CHECK=true
# REDIS_CONNECT_TIMEOUT=10000

# ----------------------------------------------------------------------------
# Supabase Configuration (REQUIRED for Database)
# ----------------------------------------------------------------------------
# Create a project at: https://app.supabase.com
# Get these values from: Project Settings → API
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_JWT_SECRET=your-jwt-secret

# Supabase Database Direct Connection (Optional - for migrations)
# DATABASE_URL=postgresql://postgres.[project-ref]:[password]@aws-0-[region].pooler.supabase.com:5432/postgres

# ----------------------------------------------------------------------------
# Clerk Authentication (REQUIRED for User Management)
# ----------------------------------------------------------------------------
# Create an app at: https://dashboard.clerk.com
# Get keys from: Dashboard → API Keys
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_...
CLERK_SECRET_KEY=sk_test_...

# Clerk URL Configuration
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

# Clerk Webhook Secret (for user sync)
# Get from: Dashboard → Webhooks → Add Endpoint
# Subscribe to: user.created, user.updated, user.deleted
CLERK_WEBHOOK_SECRET=whsec_...

# ----------------------------------------------------------------------------
# Avinode API (MCP Server - Week 2 Implementation)
# ----------------------------------------------------------------------------
# Contact Avinode for API access: https://www.avinode.com
# Documentation: https://api.avinode.com/docs
AVINODE_API_KEY=
AVINODE_API_URL=https://api.avinode.com
AVINODE_ENVIRONMENT=sandbox

# ----------------------------------------------------------------------------
# Gmail API (MCP Server - Week 2 Implementation)
# ----------------------------------------------------------------------------
# Set up OAuth 2.0 credentials at: https://console.cloud.google.com/apis/credentials
# Enable Gmail API: https://console.cloud.google.com/apis/library/gmail.googleapis.com
GMAIL_CLIENT_ID=
GMAIL_CLIENT_SECRET=
GMAIL_REFRESH_TOKEN=
GMAIL_ACCESS_TOKEN=

# Gmail Configuration
GMAIL_SENDER_EMAIL=noreply@jetvision.ai
GMAIL_SENDER_NAME=JetVision AI Assistant

# ----------------------------------------------------------------------------
# Google Sheets API (MCP Server - Week 2 Implementation)
# ----------------------------------------------------------------------------
# Use same OAuth credentials as Gmail
# Enable Google Sheets API: https://console.cloud.google.com/apis/library/sheets.googleapis.com
GOOGLE_SHEETS_CLIENT_ID=
GOOGLE_SHEETS_CLIENT_SECRET=
GOOGLE_SHEETS_REFRESH_TOKEN=

# Client Database Sheet ID
# Get from sheet URL: https://docs.google.com/spreadsheets/d/{SHEET_ID}/edit
CLIENT_DATABASE_SHEET_ID=

# ----------------------------------------------------------------------------
# Sentry Error Monitoring (Week 6 Implementation)
# ----------------------------------------------------------------------------
# Create project at: https://sentry.io
# Get DSN from: Settings → Projects → [Your Project] → Client Keys (DSN)
NEXT_PUBLIC_SENTRY_DSN=https://...@o...ingest.us.sentry.io/...
SENTRY_AUTH_TOKEN=
SENTRY_ORG=
SENTRY_PROJECT=

# Sentry Configuration
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=1.0
SENTRY_DEBUG=false
# SENTRY_RELEASE=  # Optional - set to git commit SHA or version

# ----------------------------------------------------------------------------
# Vercel Analytics (Optional)
# ----------------------------------------------------------------------------
# Automatically enabled on Vercel deployments
# NEXT_PUBLIC_VERCEL_ANALYTICS_ID=

# ----------------------------------------------------------------------------
# Feature Flags (Development)
# ----------------------------------------------------------------------------
NEXT_PUBLIC_ENABLE_DEBUG_MODE=false
NEXT_PUBLIC_ENABLE_MOCK_DATA=false
NEXT_PUBLIC_ENABLE_AGENT_MONITORING=true

# ----------------------------------------------------------------------------
# Rate Limiting (Production)
# ----------------------------------------------------------------------------
# RATE_LIMIT_MAX_REQUESTS=100
# RATE_LIMIT_WINDOW_MS=60000

# ----------------------------------------------------------------------------
# Email Configuration (Alternative to Gmail MCP)
# ----------------------------------------------------------------------------
# If using SMTP instead of Gmail API
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=
# SMTP_PASSWORD=
# SMTP_FROM_EMAIL=
# SMTP_FROM_NAME=

# ----------------------------------------------------------------------------
# Webhook URLs (Production)
# ----------------------------------------------------------------------------
# Set these in production for external service callbacks
# WEBHOOK_BASE_URL=https://your-domain.com
# AVINODE_WEBHOOK_URL=https://your-domain.com/api/webhooks/avinode
# CLERK_WEBHOOK_URL=https://your-domain.com/api/webhooks/clerk

# ----------------------------------------------------------------------------
# Database Pooling (Production)
# ----------------------------------------------------------------------------
# Connection pool settings for production
# DB_POOL_MIN=2
# DB_POOL_MAX=10
# DB_IDLE_TIMEOUT=10000

# ----------------------------------------------------------------------------
# Logging Configuration
# ----------------------------------------------------------------------------
LOG_LEVEL=info  # debug | info | warn | error
LOG_FORMAT=json  # json | pretty
# LOG_FILE_PATH=./logs/app.log

# ----------------------------------------------------------------------------
# Agent Configuration (Advanced)
# ----------------------------------------------------------------------------
# Default model for AI agents
AGENT_DEFAULT_MODEL=gpt-4-turbo-preview
AGENT_DEFAULT_TEMPERATURE=0.7
AGENT_MAX_TOKENS=4096
AGENT_TIMEOUT_MS=30000

# Agent Retry Configuration
AGENT_MAX_RETRIES=3
AGENT_RETRY_DELAY_MS=1000

# ----------------------------------------------------------------------------
# Task Queue Configuration (Advanced)
# ----------------------------------------------------------------------------
BULLMQ_DEFAULT_JOB_TIMEOUT=300000  # 5 minutes
BULLMQ_MAX_RETRIES=3
BULLMQ_BACKOFF_DELAY=5000

# ----------------------------------------------------------------------------
# Security Configuration
# ----------------------------------------------------------------------------
# Session secret for encryption (generate with: openssl rand -base64 32)
# SESSION_SECRET=

# CORS Configuration (production)
# ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# API Key for internal services (generate with: openssl rand -hex 32)
# INTERNAL_API_KEY=

# ----------------------------------------------------------------------------
# Development Tools
# ----------------------------------------------------------------------------
# Enable React DevTools and debug panels
NEXT_PUBLIC_DEV_TOOLS_ENABLED=true

# Skip email sending in development
DEV_SKIP_EMAIL_SENDING=false

# Use mock MCP servers in development
DEV_USE_MOCK_MCP=false
